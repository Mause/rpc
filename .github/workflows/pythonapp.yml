name: Python application

on: [push]

jobs:
  build_backend:
    runs-on: ubuntu-latest

    services:
      mqqt:
        image: 'rabbitmq:3.13.0'
        ports: ['5672:5672']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: Cache poetry virtualenv
        id: cache-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install poetry
        run: |
          python -m pip install --upgrade poetry
      - name: Install dependencies
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          poetry install
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run mypy
        run: |
          poetry run mypy .
      - name: Test with pytest
        run: |
          poetry run pytest -vv
      # - name: Archive test report
      #   uses: actions/upload-artifact@v1
      #   if: always()
      #   with:
      #     name: report.html
      #     path: report.html
